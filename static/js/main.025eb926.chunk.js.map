{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","image","src","avatar","alt","text","author","name","time","messageData","HW1","Affair","task","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.025eb926.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__26s74\",\"image\":\"Message_image__1XVSY\",\"text\":\"Message_text__17aFY\",\"author\":\"Message_author__2GQ6F\",\"time\":\"Message_time__3-4sE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Affairs_task__1svy6\",\"buttons\":\"Affairs_buttons__M3s9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2G7b1\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessageType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nfunction Message(props: MessageType) {\n  return (\n    <div className={s.message}>\n      <div className={s.image}>\n        <img src={props.avatar} alt=\"\"/>\n      </div>\n      <div className={s.text}>\n        <span className={s.author}>{props.name}</span>\n        <p>{props.message}</p>\n        <span className={s.time}>{props.time}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'http://cs622426.vk.me/v622426834/409d/baLqspYwi84.jpg',\n    name: 'Димыч',\n    message: 'Ctrl + Alt + L не забывайте нажимать чтоб красивый код был (это увеличивает скорость обучения и чтения кода и облегчает поиск ошибок и понимание \"что тут происходит\")\\n',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType // need to fix any\n  deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n  }// need to fix\n\n  return (\n    <div className={s.task}>\n      <span>{props.affair.name}</span><span>[ {props.affair.priority} ]</span>\n      <button onClick={deleteCallback}>X</button>\n    </div>\n  )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n  data: Array<AffairType>\n  setFilter: (value: FilterType) => void\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ))\n\n  const setAll = () => {\n    props.setFilter(\"all\")\n  } // need to fix\n  const setHigh = () => {\n    props.setFilter(\"high\")\n  }\n  const setMiddle = () => {\n    props.setFilter(\"middle\")\n  }\n  const setLow = () => {\n    props.setFilter(\"low\")\n  }\n\n  return (\n    <div>\n      {mappedAffairs}\n      <div className={s.buttons}>\n        <button onClick={setAll}>All</button>\n        <button onClick={setHigh}>High</button>\n        <button onClick={setMiddle}>Middle</button>\n        <button onClick={setLow}>Low</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\" // need to fix any\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'anime', priority: 'low'},\n  {_id: 3, name: 'games', priority: 'low'},\n  {_id: 4, name: 'work', priority: 'high'},\n  {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n  if (filter === 'high') return affairs.filter(a => a.priority === \"high\")\n  else if (filter === 'middle') return affairs.filter(a => a.priority === \"middle\")\n  else if (filter === 'low') return affairs.filter(a => a.priority === \"low\")\n  else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n  return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n  return (\n    <div>\n      <hr/>\n      homeworks 2\n\n      {/*should work (должно работать)*/}\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}