{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/pages/Error.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/RoutesComponent.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","image","src","avatar","alt","text","author","name","time","messageData","HW1","Affair","task","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","input","totalUser","inputGroup","value","onChange","disabled","errorText","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checkboxLabel","checked","HW4","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","Error404","page404","number","PATH","RoutesComponent","path","element","replace","to","Header","nav","hamburger","line","menu","item","active","navActive","isActive","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e185efd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3EvKJ\",\"hamburger\":\"Header_hamburger__2mhWp\",\"line\":\"Header_line__13J6n\",\"menu\":\"Header_menu__2U7ec\",\"active\":\"Header_active__1to5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__26s74\",\"image\":\"Message_image__1XVSY\",\"text\":\"Message_text__17aFY\",\"author\":\"Message_author__2GQ6F\",\"time\":\"Message_time__3-4sE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totalUser\":\"Greeting_totalUser__iZdUe\",\"inputGroup\":\"Greeting_inputGroup__3w3o9\",\"input\":\"Greeting_input__1QGX3\",\"error\":\"Greeting_error__Td8r6\",\"errorText\":\"Greeting_errorText__hYb-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Affairs_task__1svy6\",\"buttons\":\"Affairs_buttons__M3s9f\",\"high\":\"Affairs_high__1qpLU\",\"middle\":\"Affairs_middle__jxm-6\",\"low\":\"Affairs_low__3SgbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3ta3N\",\"errorInput\":\"SuperInputText_errorInput__36O12\",\"error\":\"SuperInputText_error__27Inf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"SuperCheckbox_checkboxLabel__RCrH3\",\"checkbox\":\"SuperCheckbox_checkbox__3p_T_\",\"focused\":\"SuperCheckbox_focused__GyPv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__NoyNh\",\"column\":\"HW4_column__2mrmf\",\"testSpanError\":\"HW4_testSpanError__3xlJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Ugepb\",\"red\":\"SuperButton_red__3S60z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404\":\"Error_page404__r5gCv\",\"number\":\"Error_number__2JJtf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2G7b1\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessageType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nfunction Message(props: MessageType) {\n  return (\n    <div className={s.message}>\n      <div className={s.image}>\n        <img src={props.avatar} alt=\"\"/>\n      </div>\n      <div className={s.text}>\n        <span className={s.author}>{props.name}</span>\n        <p>{props.message}</p>\n        <span className={s.time}>{props.time}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n  avatar: 'http://cs622426.vk.me/v622426834/409d/baLqspYwi84.jpg',\n  name: 'Димыч',\n  message: 'Ctrl + Alt + L не забывайте нажимать чтоб красивый код был (это увеличивает скорость обучения и чтения кода и облегчает поиск ошибок и понимание \"что тут происходит\")\\n',\n  time: '22:00',\n}\n\nfunction HW1() {\n  return (\n    <div>\n      <h3>homeworks 1</h3>\n      {/*should work (должно работать)*/}\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeMessage/>*/}\n    </div>\n  )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType // need to fix any\n  deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n  }// need to fix\n\n  return (\n    <div className={s.task}>\n      <span>{props.affair.name}</span><span className={s[props.affair.priority]}>[ {props.affair.priority} ]</span>\n      <button onClick={deleteCallback}>X</button>\n    </div>\n  )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n  data: Array<AffairType>\n  setFilter: (value: FilterType) => void\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ))\n\n  const setAll = () => {\n    props.setFilter(\"all\")\n  } // need to fix\n  const setHigh = () => {\n    props.setFilter(\"high\")\n  }\n  const setMiddle = () => {\n    props.setFilter(\"middle\")\n  }\n  const setLow = () => {\n    props.setFilter(\"low\")\n  }\n\n  return (\n    <div>\n      {mappedAffairs}\n      <div className={s.buttons}>\n        <button onClick={setAll}>All</button>\n        <button onClick={setHigh}>High</button>\n        <button onClick={setMiddle}>Middle</button>\n        <button onClick={setLow}>Low</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\" // need to fix any\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'anime', priority: 'low'},\n  {_id: 3, name: 'games', priority: 'low'},\n  {_id: 4, name: 'work', priority: 'high'},\n  {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\n// export const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n//   if (filter === 'high') return affairs.filter(a => a.priority === \"high\")\n//   else if (filter === 'middle') return affairs.filter(a => a.priority === \"middle\")\n//   else if (filter === 'low') return affairs.filter(a => a.priority === \"low\")\n//   else return affairs\n// }\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => filter === 'all' ? affairs : affairs.filter(a => a.priority === filter)\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => affairs.filter(a => a._id !== _id)\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n  return (\n    <div>\n      <h3>homeworks 2</h3>\n\n      {/*should work (должно работать)*/}\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n\n      />\n\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n    </div>\n  )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n  name: string // need to fix any\n  setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n  addUser: () => void // need to fix any\n  error: string // need to fix any\n  totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n  const inputClass = `${s.input} ${error && s.error}`  // need to fix with (?:)\n\n  return (\n    <div>\n      <span className={s.totalUser}>User online: {totalUsers}</span>\n      <div className={s.inputGroup}>\n        <input value={name} onChange={setNameCallback} className={inputClass}/>\n        <button onClick={addUser} disabled={!!error}>+</button>\n      </div>\n      <span className={s.errorText}>{error}</span>\n    </div>\n  )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: Array<UserType> // need to fix any\n  addUserCallback: (name: string) => void// need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n  const [name, setName] = useState<string>('') // need to fix any\n  const [error, setError] = useState<string>('') // need to fix any\n\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.currentTarget.value.trim();\n    if (value) {\n      setName(value);\n      setError('')\n    } else {\n      setName('');\n      setError('name is required')\n    }\n  }\n  const addUser = () => {\n    if (!error && name !== '') {\n      addUserCallback(name);\n      alert(`Hello ${name}!`)\n      setName('')\n    } else {\n      setError('name is required')\n    }\n  }\n\n  const totalUsers = users.length\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n    />\n  )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n  _id: string\n  name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<Array<UserType>>([])\n\n  const addUserCallback = (name: string) => {\n    setUsers([{_id: v1(), name: name}, ...users]) // need to fix\n  }\n\n  return (\n    <div>\n      <h3>homeworks 3</h3>\n\n      {/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeGreeting/>*/}\n    </div>\n  )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error && s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.default} ${red && s.red} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(e)\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.checkboxLabel}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Field is required'\n\n    const showAlert = () => {\n        if (error) {\n            alert('Введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <h3>homeworks 4</h3>\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            {/*<hr/>*/}\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            {/*<hr/>*/}\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div className={\"homeworks\"}>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n// import HW7 from \"../../h7/HW7\";\n// import HW8 from \"../../h8/HW8\";\n// import HW9 from \"../../h9/HW9\";\n// import HW10 from \"../../h10/HW10\";\n// import HW11 from \"../../h11/HW11\";\n\nfunction Junior() {\n    return (\n        <div>\n            {/*<HW7/>*/}\n            {/*<HW8/>*/}\n            {/*<HW9/>*/}\n            {/*<HW10/>*/}\n            {/*<HW11/>*/}\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n// import HW12 from \"../../h12/HW12\";\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            {/*<HW12/>*/}\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport s from './Error.module.css'\n\nfunction Error404() {\n  return (\n    <div className={s.page404}>\n      <div className={s.number}>404</div>\n      <div>Sorry, page not found!</div>\n    </div>\n  )\n}\n\nexport default Error404\n","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport {Routes, Route, Navigate} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n  PRE_JUNIOR: '/pre-junior',\n  JUNIOR: '/junior',\n  JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction RoutesComponent() {\n  return (\n    <div>\n      {/*Switch выбирает первый подходящий роут*/}\n      <Routes>\n        {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n        {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n        <Route path=\"/\" element={<Navigate replace to={PATH.PRE_JUNIOR}/>}/>\n        {/*<Route path={'/'} element={<Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n        <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n        <Route path={PATH.JUNIOR} element={<Junior/>}/>\n        <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\n\n        {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n        <Route path=\"*\" element={<Error404/>}/>\n\n      </Routes>\n    </div>\n  )\n}\n\nexport default RoutesComponent\n","import React from 'react'\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./RoutesComponent\";\n\nfunction Header() {\n  return (\n    <div className={s.nav}>\n      <div className={s.hamburger}>\n        <div className={s.line}></div>\n        <div className={s.line}></div>\n        <div className={s.line}></div>\n      </div>\n      <ul className={s.menu}>\n        <li className={`${s.item} ${s.active}`}>\n          <NavLink to={PATH.PRE_JUNIOR}\n                   className={(navActive) => navActive.isActive ? s.active : \"\"}>Pre-Junior</NavLink>\n        </li>\n        <li className={s.item}>\n          <NavLink to={PATH.JUNIOR}\n                   className={(navActive) => navActive.isActive ? s.active : \"\"}>Junior</NavLink>\n        </li>\n        <li className={s.item}>\n          <NavLink to={PATH.JUNIOR_PLUS}\n                   className={(navActive) => navActive.isActive ? s.active : \"\"}>Junior+</NavLink>\n        </li>\n      </ul>\n\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport RoutesComponent from \"./RoutesComponent\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n  return (\n    <div>\n      {/*в gh-pages лучше работает HashRouter*/}\n      <HashRouter>\n\n        <Header/>\n        <RoutesComponent/>\n\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\n// import HW1 from '../../../p2-homeworks/h1/HW1'\n// import HW2 from \"../../../p2-homeworks/h2/HW2\";\n// import HW3 from \"../../../p2-homeworks/h3/HW3\";\n// import HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <h2>react homeworks:</h2>\n      {/*<HW1/>*/}\n      {/*<HW2/>*/}\n      {/*<HW3/>*/}\n      {/*<HW4/>*/}\n      <HW5/>\n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}